{"id":"../node_modules/reanimated-formula/dist/module/simple-math-ast/tokenize/unknown.js","dependencies":[{"name":"/Users/ravipiyush/opensource/babel-plugin-reanimated-formula/node_modules/reanimated-formula/dist/module/simple-math-ast/tokenize/unknown.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/ravipiyush/opensource/babel-plugin-reanimated-formula/package.json","includedInParent":true,"mtime":1558207228801},{"name":"/Users/ravipiyush/opensource/babel-plugin-reanimated-formula/.babelrc","includedInParent":true,"mtime":1558125306084},{"name":"/Users/ravipiyush/opensource/babel-plugin-reanimated-formula/node_modules/reanimated-formula/package.json","includedInParent":true,"mtime":1558115368933},{"name":"ramda","loc":{"line":1,"column":28},"parent":"/Users/ravipiyush/opensource/babel-plugin-reanimated-formula/node_modules/reanimated-formula/dist/module/simple-math-ast/tokenize/unknown.js","resolved":"/Users/ravipiyush/opensource/babel-plugin-reanimated-formula/node_modules/ramda/es/index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isUnknown = exports.UNKNOWN_RULE = exports.UNKNOWN = void 0;\n\nvar _ramda = require(\"ramda\");\n\nvar UNKNOWN = 'UNKNOWN';\nexports.UNKNOWN = UNKNOWN;\nvar UNKNOWN_RULE = {\n  key: '.+',\n  data: {\n    type: UNKNOWN\n  }\n};\nexports.UNKNOWN_RULE = UNKNOWN_RULE;\nvar isUnknown = (0, _ramda.pipe)((0, _ramda.prop)('type'), (0, _ramda.equals)(UNKNOWN));\nexports.isUnknown = isUnknown;"},"sourceMaps":{"js":{"mappings":[{"source":"unknown.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"unknown.ts","name":null,"original":{"line":3,"column":7},"generated":{"line":10,"column":0}},{"source":"unknown.ts","name":"UNKNOWN","original":{"line":3,"column":13},"generated":{"line":10,"column":4}},{"source":"unknown.ts","name":null,"original":{"line":3,"column":20},"generated":{"line":10,"column":11}},{"source":"unknown.ts","name":null,"original":{"line":3,"column":23},"generated":{"line":10,"column":14}},{"source":"unknown.ts","name":null,"original":{"line":3,"column":7},"generated":{"line":10,"column":23}},{"source":"unknown.ts","name":null,"original":{"line":5,"column":7},"generated":{"line":12,"column":0}},{"source":"unknown.ts","name":"UNKNOWN_RULE","original":{"line":5,"column":13},"generated":{"line":12,"column":4}},{"source":"unknown.ts","name":null,"original":{"line":5,"column":25},"generated":{"line":12,"column":16}},{"source":"unknown.ts","name":null,"original":{"line":5,"column":28},"generated":{"line":12,"column":19}},{"source":"unknown.ts","name":"key","original":{"line":6,"column":1},"generated":{"line":13,"column":0}},{"source":"unknown.ts","name":"key","original":{"line":6,"column":1},"generated":{"line":13,"column":2}},{"source":"unknown.ts","name":null,"original":{"line":6,"column":4},"generated":{"line":13,"column":5}},{"source":"unknown.ts","name":null,"original":{"line":6,"column":6},"generated":{"line":13,"column":7}},{"source":"unknown.ts","name":null,"original":{"line":5,"column":28},"generated":{"line":13,"column":11}},{"source":"unknown.ts","name":"data","original":{"line":7,"column":1},"generated":{"line":14,"column":0}},{"source":"unknown.ts","name":"data","original":{"line":7,"column":1},"generated":{"line":14,"column":2}},{"source":"unknown.ts","name":null,"original":{"line":7,"column":5},"generated":{"line":14,"column":6}},{"source":"unknown.ts","name":null,"original":{"line":7,"column":7},"generated":{"line":14,"column":8}},{"source":"unknown.ts","name":"type","original":{"line":8,"column":2},"generated":{"line":15,"column":0}},{"source":"unknown.ts","name":"type","original":{"line":8,"column":2},"generated":{"line":15,"column":4}},{"source":"unknown.ts","name":null,"original":{"line":8,"column":6},"generated":{"line":15,"column":8}},{"source":"unknown.ts","name":"UNKNOWN","original":{"line":8,"column":8},"generated":{"line":15,"column":10}},{"source":"unknown.ts","name":null,"original":{"line":7,"column":7},"generated":{"line":16,"column":0}},{"source":"unknown.ts","name":null,"original":{"line":5,"column":28},"generated":{"line":17,"column":0}},{"source":"unknown.ts","name":null,"original":{"line":5,"column":7},"generated":{"line":17,"column":1}},{"source":"unknown.ts","name":null,"original":{"line":12,"column":7},"generated":{"line":19,"column":0}},{"source":"unknown.ts","name":"isUnknown","original":{"line":12,"column":13},"generated":{"line":19,"column":4}},{"source":"unknown.ts","name":null,"original":{"line":12,"column":22},"generated":{"line":19,"column":13}},{"source":"unknown.ts","name":"pipe","original":{"line":12,"column":25},"generated":{"line":19,"column":16}},{"source":"unknown.ts","name":"prop","original":{"line":14,"column":1},"generated":{"line":19,"column":33}},{"source":"unknown.ts","name":null,"original":{"line":14,"column":6},"generated":{"line":19,"column":50}},{"source":"unknown.ts","name":"prop","original":{"line":14,"column":1},"generated":{"line":19,"column":56}},{"source":"unknown.ts","name":"pipe","original":{"line":12,"column":25},"generated":{"line":19,"column":57}},{"source":"unknown.ts","name":"equals","original":{"line":15,"column":1},"generated":{"line":19,"column":59}},{"source":"unknown.ts","name":"UNKNOWN","original":{"line":15,"column":8},"generated":{"line":19,"column":78}},{"source":"unknown.ts","name":"equals","original":{"line":15,"column":1},"generated":{"line":19,"column":85}},{"source":"unknown.ts","name":"pipe","original":{"line":12,"column":25},"generated":{"line":19,"column":86}},{"source":"unknown.ts","name":null,"original":{"line":12,"column":7},"generated":{"line":19,"column":87}}],"sources":{"unknown.ts":"import {pipe, prop, equals} from 'ramda';\n\nexport const UNKNOWN = 'UNKNOWN';\n\nexport const UNKNOWN_RULE = {\n\tkey: '.+',\n\tdata: {\n\t\ttype: UNKNOWN\n\t}\n};\n\nexport const isUnknown = pipe(\n\t// @ts-ignore\n\tprop('type'),\n\tequals(UNKNOWN)\n);\n"},"lineCount":null}},"error":null,"hash":"e462e23cc874e728df277f7f8f99f413","cacheData":{"env":{}}}